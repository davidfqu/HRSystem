
@{
    ViewBag.Title = "NewUser";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section style{
    <link href="~/css/Toasts.css" rel="stylesheet" />
}

<div id="snackbar">
    Windows user already exist!
</div>

<div id="snackbar2">
   Employee # already exist in that plant!
</div>

<div id="snackbar3">
    Employee # doesn't exist in that plant!
</div>

<h2 class="mt-3">New User</h2>

<hr />
@using (Html.BeginForm("NewUser", "t_usuarios", FormMethod.Post, new { @class = "needs-validation", @novalidate = true }))
{
    @Html.AntiForgeryToken()
    <div class="form-row">
        <div class="col-md-4 mb-3">
            <label for="validationCustomUsername">Plant</label>
            <div class="form-group">
                @Html.DropDownList("planta", null, htmlAttributes: new { @class = "custom-select browser-default", @require = true, @name = "planta" })
                <div class="invalid-feedback">Required input</div>
                <div class="valid-feedback">
                    Looks good!
                </div>
            </div>
        </div>
        <div class="col-md-4 mb-3">
            <label for="validationCustom01"> Employee #</label>
            <input type="number" class="form-control" id="validationCustom01" name="iempleado" placeholder="Employee #" max="100000"
                   required>
            <div class="valid-feedback">
                Looks good!
            </div>
            <div class="invalid-feedback">Required input</div>
        </div>

        <div class="col-md-4 mb-3">
            <label for="validationCustom01"> Windows User</label>
            <input type="text" class="form-control" id="validationCustom01" name="usuario" placeholder="Windows User" maxlength="20"
                   required>
            <div class="valid-feedback">
                Looks good!
            </div>
            <div class="invalid-feedback">Required input</div>
        </div>


    </div>
    <div class="form-row">
        <div class="col-md-3 mb-3">
            <label for="validationCustom02">Email</label>
            <input type="email" class="form-control" id="validationCustom02" placeholder="Email" name="email" maxlength="50"
                   required >
            <div class="valid-feedback">
                Looks good!
            </div>
            <div class="invalid-feedback">Required input</div>
        </div>
        <div class="col-md-3 mb-3">
            <label for="validationCustomUsername">Role</label>
            <div class="form-group">
                @Html.DropDownList("rol", null, htmlAttributes: new { @class = "custom-select browser-default", @require = true, @name = "rol" })

                <div class="invalid-feedback">Required input</div>
                <div class="valid-feedback">
                    Looks good!
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <label for="validationCustomUsername">Supervisor</label>
            <div class="form-group">
                @Html.DropDownList("supervisor", null, htmlAttributes: new { @class = "custom-select browser-default", @require = true, @name = "supervisor" })
                <div class="invalid-feedback">Required input</div>
                <div class="valid-feedback">
                    Looks good!
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <label for="validationCustomUsername">Manager</label>
            <div class="form-group">
                @Html.DropDownList("manager", null, htmlAttributes: new { @class = "custom-select browser-default", @require = true, @name = "manager" })
                <div class="invalid-feedback">Required input</div>
                <div class="valid-feedback">
                    Looks good!
                </div>
            </div>
        </div>
    </div>
    <button class="btn btn-primary rounded-pill" type="submit">Create</button>
}

<div class="mt-2">
    <a href="@Url.Action("Index", "t_usuarios",null)"><i class="fas fa-chevron-left"></i>  Back</a>
</div>

@section scripts{ 
<script>
    var alert = @ViewBag.Alert;

    if (alert == "1")
    {
        alert1();
    }

    if(alert == "2")
    {
        alert2();
    }

    if(alert == "3")
    {
        alert3();
    }


    function alert1() {
        // Get the snackbar DIV
        var x = document.getElementById("snackbar");

        // Add the "show" class to DIV
        x.className = "show";

        // After 3 seconds, remove the show class from DIV
        setTimeout(function () { x.className = x.className.replace("show", ""); }, 10000);
    };

    function alert2() {
        // Get the snackbar DIV
        var x = document.getElementById("snackbar2");

        // Add the "show" class to DIV
        x.className = "show";

        // After 3 seconds, remove the show class from DIV
        setTimeout(function () { x.className = x.className.replace("show", ""); }, 10000);
    };

    function alert3() {
        // Get the snackbar DIV
        var x = document.getElementById("snackbar3");

        // Add the "show" class to DIV
        x.className = "show";

        // After 3 seconds, remove the show class from DIV
        setTimeout(function () { x.className = x.className.replace("show", ""); }, 10000);
    };

    (function () {
        'use strict';
        window.addEventListener('load', function () {
            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            var forms = document.getElementsByClassName('needs-validation');
            // Loop over them and prevent submission
            var validation = Array.prototype.filter.call(forms, function (form) {
                form.addEventListener('submit', function (event) {
                    if (form.checkValidity() === false) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        }, false);
    })();
</script>
}