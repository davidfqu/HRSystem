
@{
    ViewBag.Title = "NewUser";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class="mt-3">New User</h2>
<hr />
<form class="needs-validation" novalidate>
    <div class="form-row">
        <div class="col-md-4 mb-3">
            <label for="validationCustomUsername">Plant</label>
            <div class="form-group">
                @Html.DropDownList("planta", null, htmlAttributes: new { @class = "custom-select browser-default", @require = true, @name="planta" })
                <div class="invalid-feedback">Required input</div>
                <div class="valid-feedback">
                    Looks good!
                </div>
            </div>
        </div>
        <div class="col-md-4 mb-3">
            <label for="validationCustom01"> Employee #</label>
            <input type="text" class="form-control" id="validationCustom01" name="empleado" placeholder="Employee #" 
                   required>
            <div class="valid-feedback">
                Looks good!
            </div>
            <div class="invalid-feedback">Required input</div>
        </div>

        <div class="col-md-4 mb-3">
            <label for="validationCustom01"> Windows User</label>
            <input type="text" class="form-control" id="validationCustom01" name="usuario" placeholder="Windows User" 
                   required>
            <div class="valid-feedback">
                Looks good!
            </div>
            <div class="invalid-feedback">Required input</div>
        </div>
       
        
    </div>
    <div class="form-row">
        <div class="col-md-3 mb-3">
            <label for="validationCustom02">Email</label>
            <input type="text" class="form-control" id="validationCustom02" placeholder="Email" name="email"
                   required>
            <div class="valid-feedback">
                Looks good!
            </div>
            <div class="invalid-feedback">Required input</div>
        </div>
        <div class="col-md-3 mb-3">
            <label for="validationCustomUsername">Role</label>
            <div class="form-group">
                @Html.DropDownList("rol", null, htmlAttributes: new { @class = "custom-select browser-default", @require = true, @name = "rol" })

                <div class="invalid-feedback">Required input</div>
                <div class="valid-feedback">
                    Looks good!
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <label for="validationCustomUsername">Supervisor</label>
            <div class="form-group">
                @Html.DropDownList("supervisor", null, htmlAttributes: new { @class = "custom-select browser-default", @require = true, @name = "supervisor" })
                <div class="invalid-feedback">Required input</div>
                <div class="valid-feedback">
                    Looks good!
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <label for="validationCustomUsername">Manager</label>
            <div class="form-group">
                @Html.DropDownList("manager", null, htmlAttributes: new { @class = "custom-select browser-default", @require = true, @name = "manager" })
                <div class="invalid-feedback">Required input</div>
                <div class="valid-feedback">
                    Looks good!
                </div>
            </div>
        </div>
    </div>    
    <button class="btn btn-primary btn-sm" type="submit">Submit form</button>
</form>

@section scripts{ 
<script>
    (function () {
        'use strict';
        window.addEventListener('load', function () {
            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            var forms = document.getElementsByClassName('needs-validation');
            // Loop over them and prevent submission
            var validation = Array.prototype.filter.call(forms, function (form) {
                form.addEventListener('submit', function (event) {
                    if (form.checkValidity() === false) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        }, false);
    })();
</script>
}