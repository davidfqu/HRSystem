
@{
    ViewBag.Title = "MeritProcess";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section style{
    <style>
        .selectButton {
            left: 70%;
            top: 90%;
            transform: translate(-50%, -50%);
            z-index: 2;
            transition: all ease 0.35s;
            width: 35px;
            height: 35px;
            overflow: hidden;
        }


           
    </style>
}

<h6 class="font-weight-bold text-center grey-text text-uppercase small mb-2 mt-3" style="font-size:1.5vw">Annual Merit Salary Plannnig</h6>
<h3 class="font-weight-bold text-center  pb-1" style="font-size:3.5vw">Merit Process</h3>

<div class="row">
    <div class="col-2"></div>
    <a class="col-8 rounded-pill text-center p-0 hoverable" style="background-color:#f2f2f2" data-toggle="collapse" href="#EmployeeInfo" aria-expanded="false" aria-controls="EmployeeInfo">
        <h4 class="mb-0" style="font-size:18px">EMPLOYEE INFO</h4>
    </a>
    <div class="col-2"></div>
</div>

    <div class="row mt-4" id="EmployeeInfo">
        <div class="col-2 my-auto">
            <div class="col-12 d-flex justify-content-center align-items-center">
                <img src="https://mdbootstrap.com/img/Photos/Avatars/img%20(32).jpg" class="img-fluid rounded-circle" style="height:100px" />
                <div class="warning-color p-0 position-absolute rounded-pill d-flex justify-content-center selectButton align-items-md-center">
                    <span class="infoText white-text" style="font-size:18px"><i class="fas fa-medal"></i></span>
                </div>
            </div>
            <div class="col-12 mt-2 mb-0 text-center" style="font-size:13px">
                Exceeded Expectations
            </div>

        </div>
                <div class="col-3 mt-3 my-auto">
                    <h5 class="font-weight-bold"> Employee #</h5>
                    <p style="font-size:18px"> 68690145</p>
                    <h5 class="font-weight-bold"> Name</h5>
                    <p style="font-size:18px"> David Quinonex Uirbe</p>
                </div>
                <div class="col-3 mt-3 my-auto">
                    <h5 class="font-weight-bold"> Department</h5>
                    <p style="font-size:18px"> IT</p>
                    <h5 class="font-weight-bold"> Job Position</h5>
                    <p style="font-size:18px"> IT Developer</p>
                </div>
                <div class="col-3 mt-3 my-auto">
                    <h5 class="font-weight-bold"> Manager</h5>
                    <p style="font-size:18px"> Eduardo Villa</p>
                    <h5 class="font-weight-bold"> 2nd Level Manager</h5>
                    <p style="font-size:18px"> Mario Chavez</p>
                </div>
                <div class="col-1 mt-3 my-auto text-center ">
                    <i class="fas fa-check success-ic" style="font-size:30px"></i>
                    <p style="font-size:12px">Elegible</p>
                </div>
        </div>
        
<hr />

<div class="row" >
    <div class="col-2"></div>
    <a href="#"  id="colmerit" class="col-8 rounded-pill text-center p-0 hoverable" style="background-color:#f2f2f2">
        <h4 class="mb-0" style="font-size:18px"  >MERIT PLAN</h4>    
    </a>
    <div class="col-2 text-right">Merit Guideline: 5% - 10%</div>
</div>

<div class="mt-4" id="MeritPlan">
    <div class="row">
        <div class="col-2 my-auto  d-flex justify-content-center align-items-center">
            <canvas id="ChartProgresso" height="120" width="120"></canvas>
        </div>

        <div class="col-3 my-auto">
            <h5 class="font-weight-bold"> Annual Base Salary</h5>
            <p style="font-size:18px"> $100,000</p>
            <h5 class="font-weight-bold"> Budget Amount</h5>
            <p style="font-size:18px"> $5,000</p>
        </div>

        <div class="col-3 rounded my-auto">
            <h5 class="font-weight-bold"> Merit Recommendation</h5>
            <div class="row">
                <div class="col-7">
                    <input type="text" class="form-control" style="font-size:18px" id="merit" pattern="^\$\d{1,3}(,\d{3})*(\.\d+)?$" value="" data-type="currency" placeholder="$0.00">
                </div>
                <div class="col-5 my-auto" style="font-size:18px">
                    <span id="meritper">0.00</span>%
                </div>
            </div>
            <h5 class="font-weight-bold"> Lump Sum</h5>
            <div class="row">
                <div class="col-7">
                    <input type="text" class="form-control" style="font-size:18px" id="lump" pattern="^\$\d{1,3}(,\d{3})*(\.\d+)?$" value="" data-type="currency" placeholder="$0.00" readonly>
                </div>
                <div class="col-5 my-auto" style="font-size:18px">
                    <span id="lumpper">0.00</span>%
                </div>
            </div>
        </div>

        <div class="col-3 my-auto">
            <h5 class="font-weight-bold"> New Annual Base Salary</h5>
            <p id="newsalary" style="font-size:18px"> $ 0.00</p>
            <h5 class="font-weight-bold"> Market Mid CR% After Merit</h5>
            <p id="marketcolor" style="font-size:18px"> <span id="marketmid"> 0.00</span>%</p>
        </div>

        <div class="col-1 mt-3 my-auto text-center ">
            <i class="fas fa-check success-ic" style="font-size:30px"></i>
            <p style="font-size:12px">Approved</p>
        </div>

    </div>
    <div class="row">
        <div class="col-2"></div>
        <div class="col-6">
            <h5 class="font-weight-bold"> Comments</h5>
            <textarea class="form-control" rows="3"></textarea>
        </div>
        <div class="col-4 my-auto d-flex justify-content-center">
            <a href="#" class="btn btn-success btn-lg rounded-pill " role="button">Approve</a>
        </div>
    </div>
</div>
    



@section scripts{
    <script>
        var i = 0;

        $("#colmerit").click(function () {
            if (i == 0)
            {
                $("#MeritPlan").hide();
                i = 1;
            }
            else
            {
                $("#MeritPlan").show();
                i = 0;
            }
            
        });

        var marketmid = 120000;
        var available = 1000000;
        var spent = 500000;

        var newmarketmid = 0;
        var newavailable = available;
        var newspent = spent;

        var meritper = document.getElementById("meritper");
        var newsalary = document.getElementById("newsalary");
        var marketmidas = document.getElementById("marketmid");
        var newmerit = 0;
        var newlump = 0;
        var absalary = 100000;
        var newsalarycur = 0;



        $("#merit").on({
            keyup: function () {
                formatCurrency($(this));
            },
            blur: function () {
                formatCurrency($(this), "blur");
                newavailable = available - newmerit - newlump;
                newspent = spent + newmerit + newlump;
                promisedDeliveryChart.data.datasets[0].data = [newavailable, newspent];
                promisedDeliveryChart.update();
            },
            input: function(){
                meritper.innerHTML = (((this.value.substring(1).replace(',', '')) / absalary) * 100).toFixed(2);
                newsalarycur = (absalary + absalary * ((this.value.substring(1).replace(',', '')) / absalary));
                newmerit = absalary * ((this.value.substring(1).replace(',', '')) / absalary);
                newsalary.innerHTML = formatCurrency2(newsalarycur.toString(), "blur");
                marketmidas.innerHTML = ((newsalarycur / marketmid) * 100).toFixed(2);
                if (((newsalarycur / marketmid) * 100) > 120) {
                    $("#marketcolor").addClass("text-danger");
                    $("#lump").attr("readonly", false);
                    marketmidas
                }
                else
                {
                    $("#marketcolor").removeClass("text-danger");
                    $("#lump").attr("readonly", true);
                }
        }

        });

        $("#lump").on({
            keyup: function () {
                formatCurrency($(this));
            },
            blur: function () {
                formatCurrency($(this), "blur");
                newavailable = available - newmerit - newlump;
                newspent = spent + newmerit + newlump;
                promisedDeliveryChart.data.datasets[0].data = [newavailable, newspent];
                promisedDeliveryChart.update();

            },
            input: function () {
                newlump = (this.value.substring(1).replace(',', '')) * 1;
               lumpper.innerHTML = (((this.value.substring(1).replace(',', '')) / absalary) * 100).toFixed(2);

            }

        });


        function formatNumber(n) {
            // format number 1000000 to 1,234,567
            return n.replace(/\D/g, "").replace(/\B(?=(\d{3})+(?!\d))/g, ",")
        }


        function formatCurrency(input, blur) {
            // appends $ to value, validates decimal side
            // and puts cursor back in right position.

            // get input value
            var input_val = input.val();

            // don't validate empty input
            if (input_val === "") { return; }

            // original length
            var original_len = input_val.length;

            // initial caret position 
            var caret_pos = input.prop("selectionStart");

            // check for decimal
            if (input_val.indexOf(".") >= 0) {

                // get position of first decimal
                // this prevents multiple decimals from
                // being entered
                var decimal_pos = input_val.indexOf(".");

                // split number by decimal point
                var left_side = input_val.substring(0, decimal_pos);
                var right_side = input_val.substring(decimal_pos);

                // add commas to left side of number
                left_side = formatNumber(left_side);

                // validate right side
                right_side = formatNumber(right_side);

                // On blur make sure 2 numbers after decimal
                if (blur === "blur") {
                    right_side += "00";
                }

                // Limit decimal to only 2 digits
                right_side = right_side.substring(0, 2);

                // join number by .
                input_val = "$" + left_side + "." + right_side;

            } else {
                // no decimal entered
                // add commas to number
                // remove all non-digits
                input_val = formatNumber(input_val);
                input_val = "$" + input_val;

                // final formatting
                if (blur === "blur") {
                    input_val += ".00";
                }
            }

            // send updated string to input
            input.val(input_val);

            // put caret back in the right position
            var updated_len = input_val.length;
            caret_pos = updated_len - original_len + caret_pos;
            input[0].setSelectionRange(caret_pos, caret_pos);
        }

        function formatCurrency2(value, blur) {
            // appends $ to value, validates decimal side
            // and puts cursor back in right position.

            // get input value
            var input_val = value

            // don't validate empty input
            if (input_val === "") { return; }

            // original length
            var original_len = input_val.length;

            // initial caret position 
         //   var caret_pos = input.prop("selectionStart");

            // check for decimal
            if (input_val.indexOf(".") >= 0) {

                // get position of first decimal
                // this prevents multiple decimals from
                // being entered
                var decimal_pos = input_val.indexOf(".");

                // split number by decimal point
                var left_side = input_val.substring(0, decimal_pos);
                var right_side = input_val.substring(decimal_pos);

                // add commas to left side of number
                left_side = formatNumber(left_side);

                // validate right side
                right_side = formatNumber(right_side);

                // On blur make sure 2 numbers after decimal
                if (blur === "blur") {
                    right_side += "00";
                }

                // Limit decimal to only 2 digits
                right_side = right_side.substring(0, 2);

                // join number by .
                input_val = "$" + left_side + "." + right_side;

            } else {
                // no decimal entered
                // add commas to number
                // remove all non-digits
                input_val = formatNumber(input_val);
                input_val = "$" + input_val;

                // final formatting
                if (blur === "blur") {
                    input_val += ".00";
                }
            }

            // send updated string to input
            return input_val;
        }

        var data = {
            labels: [
              "Available",
              "Spent"
            ],
            datasets: [
              {
                  data: [available, spent],
                  backgroundColor: [
                    "#B3DDA8",
                    "#F4F4F4"
                  ],
                  hoverBackgroundColor: [
                    "#B3DDA8",
                    "#F4F4F4"
                  ]
              }]
        };

        var promisedDeliveryChart = new Chart(document.getElementById('ChartProgresso'), {
            type: 'doughnut',
            data: {
                labels: [
              "Available",
              "Spent"
                ],
                datasets: [
                  {
                      data: [available, spent],
                      backgroundColor: [
                        "#B3DDA8",
                        "#F4F4F4"
                      ],
                      hoverBackgroundColor: [
                        "#B3DDA8",
                        "#F4F4F4"
                      ]
                  }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                cutoutPercentage: 80,
                animation: {
                    animationRotate: true,
                    duration: 2000
                },
                legend: {
                    display: false
                },
                plugins: {
                    datalabels: {
                        display: false,
                    }
                }
            },
            plugins: [{
                beforeDraw: function (chart) {
                    var width = chart.chart.width,
                        height = chart.chart.height,
                        ctx = chart.chart.ctx;

                    ctx.restore();
                    var fontSize = (height / 50).toFixed(2);
                    ctx.font = fontSize + "em sans-serif";

                    ctx.textBaseline = "middle";

                    var text = Math.round((newavailable/(newavailable+newspent))*100).toString() + '%' ,
                        textX = Math.round((width - ctx.measureText(text).width) / 2),
                        textY = height / 2;

                    ctx.fillText(text, textX, textY);
                    ctx.save();
                }
            }]
        });
    </script>
}